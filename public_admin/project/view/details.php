<?php/* Add this on all pages on top. */set_include_path($_SERVER['DOCUMENT_ROOT'].'/'.PATH_SEPARATOR.$_SERVER['DOCUMENT_ROOT'].'/library/classes/');/*** Standard includes */require_once 'config/database.php';require_once 'config/smarty.php';/*** Check for login */require_once 'includes/auth.php';/* objects. */require_once 'class/project.php';require_once 'class/File.php';$projectObject 			= new class_project();$fileObject 					= new File(array('gif', 'png', 'jpg', 'jpeg', 'gif'));if (isset($_GET['code']) && trim($_GET['code']) != '') {		$code = trim($_GET['code']);		$projectData = $projectObject->getByCode($code);		if($projectData) {		$smarty->assign('projectData', $projectData);	} else {		header('Location: /project/view/');		exit;			}}/* Check posted data. */if(count($_POST) > 0) {	$errorArray		= array();	$data 				= array();	$formValid		= true;	$success			= NULL;	$areaByName	= NULL;		if(isset($_POST['areapost_code']) && trim($_POST['areapost_code']) == '') {		$errorArray['areapost_code'] = 'Please add an area';		$formValid = false;			}		if(isset($_POST['project_name']) && trim($_POST['project_name']) == '') {		$errorArray['project_name'] = 'Please add a name';		$formValid = false;			}		if(isset($_POST['project_description']) && trim($_POST['project_description']) == '') {		$errorArray['project_description'] = 'Please add a short description';		$formValid = false;			}		if(isset($_POST['project_page']) && trim($_POST['project_page']) == '') {		$errorArray['project_page'] = 'Please add a page';		$formValid = false;			}		if(isset($_POST['project_date_start']) && trim($_POST['project_date_start']) != '') {		if(trim($_POST['project_date_start']) != date('Y-m-d', strtotime(trim($_POST['project_date_start'])))) {			$errorArray['project_date_start'] = 'Please add a valid date';			$formValid = false;				}	} else {		$errorArray['project_date_start'] = 'Date of birth is required';		$formValid = false;	}		if(isset($_POST['project_date_end']) && trim($_POST['project_date_end']) != '') {		if(trim($_POST['project_date_end']) != date('Y-m-d', strtotime(trim($_POST['project_date_end'])))) {			$errorArray['project_date_end'] = 'Please add a valid date';			$formValid = false;				}	}			if(isset($_FILES['profileimage'])) {		/* Check validity of the CV. */		if((int)$_FILES['profileimage']['size'] != 0 && trim($_FILES['profileimage']['name']) != '') {			/* Check if its the right file. */			$ext = $fileObject->file_extention($_FILES['profileimage']['name']); 			if($ext != '') {								$checkExt = $fileObject->getValidateExtention('profileimage', $ext);							if(!$checkExt) {					$errorArray['profileimage'] = 'Invalid file type something funny with the file format, try another one';					$formValid = false;										}			} else {				$errorArray['profileimage'] = 'Invalid file type';				$formValid = false;												}		} else {						switch((int)$_FILES['profileimage']['error']) {				case 1 : $errorArray['profileimage'] = 'The uploaded file exceeds the maximum upload file size, should be less than 1M'; $formValid = false; break;				case 2 : $errorArray['profileimage'] = 'File size exceeds the maximum file size'; $formValid = false; break;				case 3 : $errorArray['profileimage'] = 'File was only partically uploaded, please try again'; $formValid = false; break;				//case 4 : $errorArray['profileimage'] = 'No file was uploaded'; $formValid = false; break;				case 6 : $errorArray['profileimage'] = 'Missing a temporary folder'; $formValid = false; break;				case 7 : $errorArray['profileimage'] = 'Faild to write file to disk'; $formValid = false; break;			}		}	}		if(count($errorArray) == 0 && $formValid == true) {				$data 	= array();						$data['areapost_code']			= trim($_POST['areapost_code']);				$data['account_code']			= trim($_POST['account_code']);				$data['project_name']			= trim($_POST['project_name']);						$data['project_date_start']		= trim($_POST['project_date_start']);				$data['project_date_end']		= trim($_POST['project_date_end']);				$data['project_description']		= trim($_POST['project_description']);				$data['project_page']				= trim($_POST['project_page']);				if(!isset($projectData)) {						$success = $projectObject->insert($data);						} else {			$where		= $projectObject->getAdapter()->quoteInto('project_code = ?', $projectData['project_code']);			$projectObject->update($data, $where);					$success 	= $projectData['project_code'];					}				/* Upload image if its added. */		if((int)$_FILES['profileimage']['size'] != 0 && trim($_FILES['profileimage']['name']) != '') {						$image = array();			$image['project_image_name']	= $projectObject->createFile();			$image['project_image_path']		= '';			$image['project_image_ext']		= '';						$ext 						= strtolower($fileObject->file_extention($_FILES['profileimage']['name']));								$filename				= $image['project_image_name'].'.'.$ext;						$directory				= realpath(__DIR__.'/../../../public_html/').'/media/project/'.$success.'/';			$file						= $directory.'/'.$filename;							if(!is_dir($directory)) mkdir($directory, 0777, true);			/* Create files for this product type. */			foreach($fileObject->image as $item) {								$newfilename = str_replace($filename, $item['code'].$filename, $file);								/* Create new file and rename it. */				$uploadObject	= PhpThumbFactory::create($_FILES['profileimage']['tmp_name']);				$uploadObject->resize($item['width'], $item['height']);				$uploadObject->save($newfilename);						}			$image['project_image_path']	= '/media/project/'.$success.'/';			$image['project_image_ext']		= '.'.$ext;			$image['project_code'] 				= $success;						$where = $projectObject->getAdapter()->quoteInto('project_code = ?', $success);			$projectObject->update($image, $where);							}				if(count($errorArray) == 0) {			header('Location: /project/view/');				exit;				}					}		/* if we are here there are errors. */	$smarty->assign('errorArray', $errorArray);	}$smarty->display('project/view/details.tpl');?>